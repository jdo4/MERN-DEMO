[{"/Users/user/Downloads/frontend/src/index.js":"1","/Users/user/Downloads/frontend/src/App.js":"2","/Users/user/Downloads/frontend/src/reportWebVitals.js":"3","/Users/user/Downloads/frontend/src/data/product.js":"4","/Users/user/Downloads/frontend/src/Routes/index.js":"5","/Users/user/Downloads/frontend/src/Components/Product.js":"6","/Users/user/Downloads/frontend/src/Components/OrdetList.js":"7","/Users/user/Downloads/frontend/src/Components/Auth.js":"8","/Users/user/Downloads/frontend/src/Components/Cart.js":"9","/Users/user/Downloads/frontend/src/Components/Dashboard.js":"10","/Users/user/Downloads/frontend/src/Components/ProductDetails.js":"11","/Users/user/Downloads/frontend/src/Components/Invoice.js":"12","/Users/user/Downloads/frontend/src/Components/Profile.js":"13","/Users/user/Downloads/frontend/src/Components/Layout/Footer.js":"14","/Users/user/Downloads/frontend/src/Components/Layout/Header.js":"15","/Users/user/Downloads/frontend/src/Components/ErrorPage/index.js":"16","/Users/user/Downloads/frontend/src/Components/StarRating.js":"17","/Users/user/Downloads/frontend/src/config/API/api.config.js":"18","/Users/user/Downloads/frontend/src/helper/services/api.js":"19","/Users/user/Downloads/frontend/src/Components/useOnClickOutside/index.js":"20","/Users/user/Downloads/frontend/src/helper/services/storage.js":"21"},{"size":535,"mtime":1681932370000,"results":"22","hashOfConfig":"23"},{"size":540,"mtime":1681936542000,"results":"24","hashOfConfig":"23"},{"size":362,"mtime":1681932370000,"results":"25","hashOfConfig":"23"},{"size":2520,"mtime":1681932370000,"results":"26","hashOfConfig":"23"},{"size":2600,"mtime":1681932370000,"results":"27","hashOfConfig":"23"},{"size":3136,"mtime":1681943210000,"results":"28","hashOfConfig":"23"},{"size":3806,"mtime":1681997454000,"results":"29","hashOfConfig":"23"},{"size":8359,"mtime":1682013824671,"results":"30","hashOfConfig":"23"},{"size":21059,"mtime":1682014159520,"results":"31","hashOfConfig":"23"},{"size":3932,"mtime":1682000000000,"results":"32","hashOfConfig":"23"},{"size":6570,"mtime":1681940086000,"results":"33","hashOfConfig":"23"},{"size":3701,"mtime":1681997762000,"results":"34","hashOfConfig":"23"},{"size":8977,"mtime":1681999446000,"results":"35","hashOfConfig":"23"},{"size":1596,"mtime":1681932370000,"results":"36","hashOfConfig":"23"},{"size":3190,"mtime":1681995936000,"results":"37","hashOfConfig":"23"},{"size":281,"mtime":1681932370000,"results":"38","hashOfConfig":"23"},{"size":815,"mtime":1681932370000,"results":"39","hashOfConfig":"23"},{"size":703,"mtime":1682002600832,"results":"40","hashOfConfig":"23"},{"size":5712,"mtime":1682013782843,"results":"41","hashOfConfig":"23"},{"size":1078,"mtime":1681932370000,"results":"42","hashOfConfig":"23"},{"size":938,"mtime":1681830570000,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"behbpb",{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"66"},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73"},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"78"},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"78"},{"filePath":"86","messages":"87","suppressedMessages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"78"},{"filePath":"90","messages":"91","suppressedMessages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":2,"source":null},{"filePath":"93","messages":"94","suppressedMessages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"66"},{"filePath":"97","messages":"98","suppressedMessages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","suppressedMessages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","suppressedMessages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","suppressedMessages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"109","messages":"110","suppressedMessages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","suppressedMessages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/user/Downloads/frontend/src/index.js",[],[],"/Users/user/Downloads/frontend/src/App.js",["115"],[],"/Users/user/Downloads/frontend/src/reportWebVitals.js",[],[],"/Users/user/Downloads/frontend/src/data/product.js",[],[],"/Users/user/Downloads/frontend/src/Routes/index.js",[],[],"/Users/user/Downloads/frontend/src/Components/Product.js",["116","117"],[],"/Users/user/Downloads/frontend/src/Components/OrdetList.js",["118","119"],[],"import React, { useEffect, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { ApiGet } from \"../helper/services/api\";\r\nimport { API } from \"../config/API/api.config\";\r\n\r\nexport default function OrderList() {\r\n  const [orderlist, setOrderlist] = useState([]);\r\n\r\n  const navigate = useNavigate();\r\n  useEffect(() => {\r\n    window.scroll({\r\n      top: 0,\r\n      left: 0,\r\n      behavior: \"smooth\",\r\n    });\r\n\r\n    ApiGet(\"order/history\")\r\n    .then((res) => {\r\n     \r\n      if(res?.payload){\r\n        setOrderlist(res?.payload)\r\n      }\r\n    })\r\n  }, []);\r\n\r\n  const onInvoiceClick = (invoiceNo) => {\r\n    const data =orderlist?.find((item)=> item?.invoiceNo == invoiceNo)\r\n\r\n    console.log(invoiceNo,\"invoiceNo\")\r\n    navigate(`/invoice/${invoiceNo}`,{ state: { data } });\r\n  };\r\n  return (\r\n    <React.Fragment>\r\n      <main class=\"contact-us\">\r\n        <section class=\"footer_get_touch_outer\">\r\n          <div class=\"container\">\r\n            <div class=\"footer_get_touch_inner\">\r\n              <div class=\"colmun-70 get_form\">\r\n                <div class=\"get_form_inner\">\r\n                  <div class=\"get_form_inner_text\">\r\n                    <h3>Order History</h3>\r\n                  </div>\r\n                  {orderlist?.length > 0 ? (\r\n                    <table class=\"content-table\">\r\n                      <thead>\r\n                        <tr>\r\n                          <th>InvoiceNo</th>\r\n                          <th>Image</th>\r\n                          <th>Product</th>\r\n                          <th>Quntity</th>\r\n                          <th>Price</th>\r\n                          <th>Tax</th>\r\n                        </tr>\r\n                      </thead>\r\n                      <tbody>\r\n                        {orderlist?.map((record, idx) => {\r\n                            return (\r\n                              <>\r\n                                {record?.order?.map((obj, i) => {\r\n                                  \r\n                                  return (\r\n                                    <>\r\n                                      <tr\r\n                                        onClick={() =>\r\n                                          onInvoiceClick(record?.invoiceNo)\r\n                                        }\r\n                                        className={\r\n                                          i % 2 == 0 ? \"\" : \"active-row\"\r\n                                        }\r\n                                      >\r\n                                        <td>{record?.invoiceNo}</td>\r\n                                        <td>\r\n                                          <img\r\n                                            src={`${API.imagePoint}/${obj?.productId?.images[0]}`}\r\n                                            alt=\"\"\r\n                                          />\r\n                                        </td>\r\n                                        <td>{obj?.productId?.productName}</td>\r\n                                        <td>{obj?.quantity}</td>\r\n                                        <td>${obj?.price}</td>\r\n                                        <td>$13</td>\r\n                                      </tr>\r\n                                    </>\r\n                                  );\r\n                                })}\r\n                              </>\r\n                            );\r\n                          })}\r\n                      </tbody>\r\n                    </table>\r\n                  ) : (\r\n                    <div>\r\n                      <div className=\"no-data\">No Data Found</div>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </section>\r\n      </main>\r\n    </React.Fragment>\r\n  );\r\n}\r\n",[],"/Users/user/Downloads/frontend/src/Components/Auth.js",["120","121","122"],[],"/Users/user/Downloads/frontend/src/Components/Cart.js",["123","124","125","126","127","128","129"],[],"import React, { useEffect, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport toast from \"react-hot-toast\";\r\nimport { ApiDelete, ApiGet, ApiPost } from \"../helper/services/api\";\r\nimport { API } from \"../config/API/api.config\";\r\n\r\nexport default function Cart() {\r\n  \r\n  const [modal, setModal] = useState(false);\r\n  const [errors, setErrors] = useState({});\r\n  const [purchaseInput, setPurchaseInput] = useState();\r\n  const [cartItem, setCart] = useState([]);\r\n  const navigate = useNavigate();\r\n\r\n  // const onClickProductDetails = (id) => {\r\n  //   let data = cartData.find((e) => e.id === id);\r\n  //   localStorage.setItem(\"singleProductDetails\", JSON.stringify(data));\r\n  //   navigate(`/product-details/${id}`);\r\n  // };\r\n\r\n  const remove = (id) => {\r\n    let cartDataList = [...cartItem];\r\n    cartDataList = cartDataList.filter((e) => e.productId !== id);\r\n    setCart(cartDataList);\r\n\r\n    //delete product from database by ID\r\n    ApiDelete(`cart/delete-product-to-cart/${id}`).then((res) => {\r\n      toast.success(\"Item remove Successfully.\");\r\n    })\r\n  };\r\n\r\nconst cartGet = () => {\r\n  //GET all of the documents from cart\r\n  ApiGet(\"cart/get\")\r\n  .then((res) => {\r\n    if(res?.payload?.[0]?.products){\r\n      //display the recoed to user\r\n      setCart(res?.payload?.[0]?.products)\r\n    }\r\n  })\r\n\r\n}\r\n\r\n  useEffect(() => {\r\n    window.scroll({\r\n      top: 0,\r\n      left: 0,\r\n      behavior: \"smooth\",\r\n    });\r\n\r\n    //initial cart table document check\r\n    cartGet()\r\n   \r\n  }, []);\r\n\r\n  const onChangeQuntity = (event, id) => {\r\n    if (event.target.value !== \"0\") {\r\n      let findIndex = cartItem?.findIndex((e) => e.productId === id);\r\n\r\n      console.log(findIndex,\"findIndex\")\r\n      if (findIndex !== -1) {\r\n        cartItem[findIndex].quantity = Number(event.target.value);\r\n      }\r\n       \r\n      setCart([...cartItem]);\r\n    }\r\n  };\r\n\r\n  const showModal = () => {\r\n    setModal(true);\r\n  };\r\n\r\n  const hideModal = () => {\r\n    setModal(false);\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setPurchaseInput({\r\n      ...purchaseInput,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  //checkout form validation\r\n  const validateFrom = () => {\r\n    let error = {};\r\n    const min = 3,\r\n      max = 25;\r\n    const isBetween = (length, min, max) =>\r\n      length < min || length > max ? false : true;\r\n\r\n      //phone no validation\r\n    const isPhoneValid = (p) => {\r\n      var phoneRe = /^[2-9]\\d{2}[2-9]\\d{2}\\d{4}$/;\r\n      var digits = p.replace(/\\D/g, \"\");\r\n      return phoneRe.test(digits);\r\n    };\r\n\r\n    //credit card no validation\r\n    const isCreditCardNumberValid = (card_number) => {\r\n      var cc =\r\n        /^(?:4[0-9]{12}(?:[0-9]{3})?|5[1-5][0-9]{14}|(222[1-9]|22[3-9][0-9]|2[3-6][0-9]{2}|27[01][0-9]|2720)[0-9]{12}|6(?:011|5[0-9][0-9])[0-9]{12}|3[47][0-9]{13}|3(?:0[0-5]|[68][0-9])[0-9]{11}|(?:2131|1800|35\\d{3})\\d{11}|62[0-9]{14})$/;\r\n\r\n      return cc.test(card_number);\r\n    };\r\n\r\n    const isEmailValid = (email) => {\r\n      const re =\r\n        /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n      return re.test(email);\r\n    };\r\n\r\n    //showwing error if there is any wrong input\r\n    if (!purchaseInput?.addre) {\r\n      error[\"addre\"] = \"Address cannot be blank.\";\r\n    } else if (!isBetween(purchaseInput?.addre.length, min, max)) {\r\n      error[\"addre\"] = `Address must be between ${min} and ${max} characters.`;\r\n    }\r\n    if (!purchaseInput?.expMonth) {\r\n      error[\"expMonth\"] = \"Expiration Mpnth cannot be blank.\";\r\n    }\r\n    if (!purchaseInput?.expYear) {\r\n      error[\"expYear\"] = \"Expiration Year cannot be blank.\";\r\n    }\r\n    if (!purchaseInput?.cardNumber) {\r\n      error[\"cardNumber\"] = \"Card Number cannot be blank.\";\r\n    } else if (\r\n      !isCreditCardNumberValid(purchaseInput?.cardNumber.replace(/\\s/g, \"\"))\r\n    ) {\r\n      error[\"cardNumber\"] = \"Card Number is not valid. \";\r\n    }\r\n\r\n    if (!purchaseInput?.cvv) {\r\n      error[\"cvv\"] = \"CVV cannot be blank.\";\r\n    }\r\n\r\n    if (!purchaseInput?.pho) {\r\n      error[\"pho\"] = \"phone cannot be blank.\";\r\n    } else if (!isPhoneValid(purchaseInput?.pho)) {\r\n      error[\"pho\"] = \"Phone is not valid.\";\r\n    }\r\n\r\n    if (Object.keys(error)?.length) {\r\n      setErrors(error);\r\n      return false;\r\n    } else {\r\n      setErrors({});\r\n      return true;\r\n    }\r\n  };\r\n\r\n  const onPurchase = (e) => {\r\n    //payment btn click function\r\n    e.preventDefault();\r\n    if (validateFrom()) {\r\n      let subtotal = 0;\r\n      let total = 0;\r\n      subtotal = cartItem.reduce((accumulator, object) => {\r\n        return accumulator + object.product?.pricing * object.quantity;\r\n      }, 0);\r\n      let totalTax = cartItem?.length ? 13 : 0;\r\n      total = subtotal + totalTax;\r\n      var duedate = new Date();\r\n      duedate.setDate(duedate.getDate() + 2);\r\n      let userInfo = {\r\n        name : purchaseInput?.na,\r\n        phone : purchaseInput?.pho,\r\n        email : purchaseInput?.ema,\r\n        owner : purchaseInput.owner,\r\n        cardDetail : {\r\n          CVV : purchaseInput.cvv,\r\n          cardNumber : purchaseInput?.cardNumber,\r\n          expMonth: purchaseInput?.expMonth,\r\n          expYear: purchaseInput?.expYear,\r\n        },\r\n        addressDetail : {\r\n          address :  purchaseInput?.addre,\r\n           city : purchaseInput?.city,\r\n           province : purchaseInput?.province,\r\n           postcode : purchaseInput?.postco,\r\n        },\r\n        order : cartItem?.map((item)=>{\r\n             return {\r\n              productId  : item.productId,\r\n              quantity : item.quantity,\r\n              price : item?.product?.pricing,\r\n              total : item?.product?.pricing * item.quantity,\r\n             }\r\n        }),\r\n        totalPrice:  total,\r\n        totalShippingCost: totalTax,\r\n        invoiceNo: String(+new Date()),\r\n      };\r\n\r\n     // console.log(userInfo,\"userInfo\")\r\n\r\n     //posting details into database\r\n      ApiPost(\"order/purchase\", userInfo)\r\n      .then((res) => {\r\n        toast.success(\"Order Successfully Created.\");\r\n         navigate(`/`);\r\n        hideModal()\r\n        setPurchaseInput({})\r\n        cartGet()\r\n      }).catch((err) => {\r\n          if(err?.code == 400){\r\n            toast.error(err?.error)\r\n          }\r\n      })\r\n    }\r\n  };\r\n\r\n  const onKeyDown = (event) => {\r\n    if (event.charCode >= 48 && event.charCode <= 57) {\r\n      return true;\r\n    } else {\r\n      event.preventDefault();\r\n      return false;\r\n    }\r\n  };\r\n\r\n  const handleCardChange = (e) => {\r\n    var cardNumber = e.target.value;\r\n\r\n    // Do not allow users to write invalid characters\r\n    var formattedCardNumber = cardNumber.replace(/[^\\d]/g, \"\");\r\n    formattedCardNumber = formattedCardNumber.substring(0, 16);\r\n\r\n    // Split the card number is groups of 4\r\n    var cardNumberSections = formattedCardNumber.match(/\\d{1,4}/g);\r\n    if (cardNumberSections !== null) {\r\n      formattedCardNumber = cardNumberSections.join(\" \");\r\n    }\r\n\r\n    setPurchaseInput({\r\n      ...purchaseInput,\r\n      [e.target.name]: formattedCardNumber,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <main className=\"small-container cart-page \">\r\n        <section>\r\n          <div className=\"CartContainer\">\r\n            {cartItem?.length > 0 ? (\r\n              <>\r\n                {cartItem?.map((o) => {\r\n                  return (\r\n                    <div className=\"Cart-Items\">\r\n                      <div className=\"image-box\">\r\n                        <img\r\n                          src={`${API.imagePoint}/${o?.product?.images[0]}`}\r\n                         // src={require(`../Assets/${o.thumbnail}`)}\r\n                          // onClick={() => onClickProductDetails(o.id)}\r\n                          style={{ height: \"120px\" }}\r\n                        />\r\n                      </div>\r\n                      <div className=\"about\">\r\n                        <h1>{o.product?.productName}</h1>\r\n                      </div>\r\n                      <div className=\"counter\">\r\n                        <input\r\n                          type=\"number\"\r\n                          min=\"1\"\r\n                          id={`quntity-${o.id}`}\r\n                          name=\"quntity\"\r\n                          value={o.quantity}\r\n                          onChange={(event) =>  onChangeQuntity(event, o.productId)}\r\n                        />\r\n                      </div>\r\n                      <div className=\"prices\">\r\n                        <div className=\"amount\">\r\n                          ${o.product?.pricing} * {o?.quantity}(Qty)\r\n                        </div>\r\n\r\n                        <div className=\"remove\" onClick={() => remove(o.productId)}>\r\n                          <u>Remove</u>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  );\r\n                })}\r\n                <div className=\"checkout\">\r\n                  {/* <div className=\"total\">\r\n                    <div>\r\n                      <div className=\"Subtotal\">Sub Total</div>\r\n                    </div>\r\n\r\n                    <div className=\"total-amount\">\r\n                      $\r\n                      {cartItem?.reduce((accumulator, object) => {\r\n                      return accumulator + (object?.product?.pricing ?? 0) * object.quantity;\r\n                    }, 0) + (cartItem?.length ? 13 : 0)}\r\n                    .00\r\n                    </div>\r\n                  </div> */}\r\n                  <div className=\"total\">\r\n                    <div>\r\n                      <div className=\"Subtotal\">Tax</div>\r\n                    </div>\r\n\r\n                    <div className=\"total-amount\">$13.00</div>\r\n                  </div>\r\n                  <div className=\"total\">\r\n                    <div>\r\n                      <div className=\"Subtotal\">Total</div>\r\n                      <div className=\"items\">{cartItem?.length} items</div>\r\n                    </div>\r\n\r\n                    <div className=\"total-amount\">\r\n                      $\r\n                      {cartItem?.reduce((accumulator, object) => {\r\n                      return accumulator + (object?.product?.pricing ?? 0) * object.quantity;\r\n                    }, 0) + (cartItem?.length ? 13 : 0)}\r\n                      .00\r\n                    </div>\r\n                  </div>\r\n                  <button onClick={() => showModal()} className=\"btn\">\r\n                    Checkout\r\n                  </button>\r\n                </div>\r\n              </>\r\n            ) : (\r\n              <div>\r\n                <div className=\"no-data\">No Data Found</div>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </section>\r\n      </main>\r\n\r\n      {modal && (\r\n        <div className=\"modal\">\r\n          <div className=\"modal-content\">\r\n            <span className=\"close\" onClick={() => hideModal()}>\r\n              &times;\r\n            </span>\r\n            <div className=\"heading\">\r\n              <h1>Payout</h1>\r\n            </div>\r\n            <div className=\"creditCardForm\">\r\n              <div className=\"payment\">\r\n                <form>\r\n                <div\r\n                    className={\r\n                      errors[\"na\"] ? \"error form-group name\" : \"form-group name\"\r\n                    }\r\n                  >\r\n                    <label for=\"name\">\r\n                      Name <span className=\"madatory\">*</span>\r\n                    </label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      id=\"name\"\r\n                      name=\"na\"\r\n                      value={purchaseInput?.na}\r\n                      onChange={handleChange}\r\n                      placeholder=\"Enter Your Name...\"\r\n                    />\r\n                    <small>{errors[\"na\"]}</small>\r\n                  </div>\r\n                  <div\r\n                    className={\r\n                      errors[\"pho\"]\r\n                        ? \"error form-group name\"\r\n                        : \"form-group name\"\r\n                    }\r\n                  >\r\n                    <label for=\"phone\">\r\n                      Phone <span className=\"madatory\">*</span>\r\n                    </label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      id=\"phone\"\r\n                      onKeyPress={(e) => onKeyDown(e)}\r\n                      name=\"pho\"\r\n                      value={purchaseInput?.pho}\r\n                      onChange={handleChange}\r\n                      placeholder=\"Enter Your Phone...\"\r\n                    />\r\n                    <small>{errors[\"pho\"]}</small>\r\n                  </div>\r\n                  <div\r\n                    className={\r\n                      errors[\"ema\"]\r\n                        ? \"error form-group email\"\r\n                        : \"form-group email\"\r\n                    }\r\n                  >\r\n                    <label for=\"email\">\r\n                      Email <span className=\"madatory\">*</span>\r\n                    </label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      id=\"email\"\r\n                      name=\"ema\"\r\n                      value={purchaseInput?.ema}\r\n                      onChange={handleChange}\r\n                      placeholder=\"Enter Your Email...\"\r\n                    />\r\n                    <small>{errors[\"ema\"]}</small>\r\n                  </div>\r\n                  <div\r\n                    className={\r\n                      errors[\"postco\"]\r\n                        ? \"error form-group phone\"\r\n                        : \"form-group phone\"\r\n                    }\r\n                  >\r\n                    <label for=\"Postcode\">\r\n                      Postcode <span className=\"madatory\">*</span>\r\n                    </label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      id=\"Postcode\"\r\n                      name=\"postco\"\r\n                      value={purchaseInput?.postco}\r\n                      onChange={handleChange}\r\n                      placeholder=\"Enter Your Postcode...\"\r\n                    />\r\n                    <small>{errors[\"postco\"]}</small>\r\n                  </div>\r\n                  <div\r\n                    className={\r\n                      errors[\"city\"]\r\n                        ? \"error form-group name\"\r\n                        : \"form-group name\"\r\n                    }\r\n                  >\r\n                    <label for=\"City\">\r\n                      City <span className=\"madatory\">*</span>\r\n                    </label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      id=\"City\"\r\n                      value={purchaseInput?.city}\r\n                      name=\"city\"\r\n                      onChange={handleChange}\r\n                      placeholder=\"Enter Your City...\"\r\n                    />\r\n                    <small>{errors[\"city\"]}</small>\r\n                  </div>\r\n                  <div\r\n                    className={\r\n                      errors[\"addre\"]\r\n                        ? \"error form-group phone\"\r\n                        : \"form-group phone\"\r\n                    }\r\n                  >\r\n                    <label for=\"Address\">\r\n                      Address <span className=\"madatory\">*</span>\r\n                    </label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      id=\"Address\"\r\n                      name=\"addre\"\r\n                      value={purchaseInput?.addre}\r\n                      onChange={handleChange}\r\n                      placeholder=\"Enter Your Address...\"\r\n                    />\r\n                    <small>{errors[\"addre\"]}</small>\r\n                  </div>\r\n\r\n                  <div\r\n                    className={\r\n                      errors[\"cvv\"] ? \"error form-group CVV\" : \"form-group CVV\"\r\n                    }\r\n                  >\r\n                    <label for=\"cvv\">\r\n                      CVV <span className=\"madatory\">*</span>\r\n                    </label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      id=\"cvv\"\r\n                      name=\"cvv\"\r\n                      onKeyPress={(e) => onKeyDown(e)}\r\n                      value={purchaseInput?.cvv}\r\n                      onChange={handleChange}\r\n                      placeholder=\"Enter Your CVV...\"\r\n                    />\r\n                    <small>{errors[\"cvv\"]}</small>\r\n                  </div>\r\n                  <div\r\n                    className={\r\n                      errors[\"cardNumber\"] ? \"error form-group \" : \"form-group \"\r\n                    }\r\n                    id=\"card-number-field\"\r\n                  >\r\n                    <label for=\"cardNumber\">\r\n                      Card Number <span className=\"madatory\">*</span>\r\n                    </label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      id=\"cardNumber\"\r\n                      onKeyPress={(e) => onKeyDown(e)}\r\n                      name=\"cardNumber\"\r\n                      value={purchaseInput?.cardNumber}\r\n                      onChange={handleCardChange}\r\n                      placeholder=\"XXXX-XXXX-XXXX-XXXX\"\r\n                    />\r\n                    <small>{errors[\"cardNumber\"]}</small>\r\n                  </div>\r\n                  <div\r\n                    className={\r\n                      errors[\"expMonth\"] || errors[\"expYear\"]\r\n                        ? \"error form-group \"\r\n                        : \"form-group \"\r\n                    }\r\n                  >\r\n                    <label>\r\n                      Expiration Date <span className=\"madatory\">*</span>\r\n                    </label>\r\n                    <select\r\n                      id=\"expiration-month\"\r\n                      name=\"expMonth\"\r\n                      value={purchaseInput?.expMonth}\r\n                      onChange={handleChange}\r\n                    >\r\n                      <option value=\"\" selected>\r\n                        MM\r\n                      </option>\r\n                      <option value=\"01\">January</option>\r\n                      <option value=\"02\">February</option>\r\n                      <option value=\"03\">March</option>\r\n                      <option value=\"04\">April</option>\r\n                      <option value=\"05\">May</option>\r\n                      <option value=\"06\">June</option>\r\n                      <option value=\"07\">July</option>\r\n                      <option value=\"08\">August</option>\r\n                      <option value=\"09\">September</option>\r\n                      <option value=\"10\">October</option>\r\n                      <option value=\"11\">November</option>\r\n                      <option value=\"12\">December</option>\r\n                    </select>\r\n                    <select\r\n                      id=\"expiration-year\"\r\n                      name=\"expYear\"\r\n                      value={purchaseInput?.expYear}\r\n                      onChange={handleChange}\r\n                    >\r\n                      <option value=\"\" selected>\r\n                        YYYY\r\n                      </option>\r\n                      <option value=\"16\">2016</option>\r\n                      <option value=\"17\">2017</option>\r\n                      <option value=\"18\">2018</option>\r\n                      <option value=\"19\">2019</option>\r\n                      <option value=\"20\">2020</option>\r\n                      <option value=\"21\">2021</option>\r\n                      <option value=\"21\">2022</option>\r\n                      <option value=\"21\">2023</option>\r\n                      <option value=\"21\">2024</option>\r\n                      <option value=\"21\">2025</option>\r\n                    </select>\r\n                    <small>{errors[\"expMonth\"] || errors[\"expYear\"]}</small>\r\n                  </div>\r\n                  <div className=\"form-group\" id=\"credit_cards\">\r\n                    <img src={require(\"../Assets/image/visa.jpg\")} id=\"visa\" />\r\n                    <img\r\n                      src={require(\"../Assets/image/mastercard.jpg\")}\r\n                      id=\"mastercard\"\r\n                    />\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group-btn\" id=\"pay-now\">\r\n              <button\r\n                type=\"submit\"\r\n                className=\"btn \"\r\n                id=\"confirm-purchase\"\r\n                onClick={(event) => onPurchase(event)}\r\n              >\r\n                Confirm\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n}\r\n","/Users/user/Downloads/frontend/src/Components/Dashboard.js",["130","131"],[],"import React, { useEffect, useState } from \"react\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport list from \"../data/product\";\r\nimport { ApiGetNoAuth, ApiPost } from \"../helper/services/api\";\r\nimport { toast } from \"react-hot-toast\";\r\nimport { API } from \"../config/API/api.config\";\r\n\r\nexport default function Dashboard() {\r\n  // let productsData = localStorage.getItem(\"list\");\r\n  // productsData = productsData\r\n  //   ? JSON.parse(productsData)\r\n  //   : localStorage.setItem(\"list\", JSON.stringify(list));\r\n  const [products, setProducts] = useState([]);\r\n  const navigate = useNavigate();\r\n  const onChangeQuntityProduct = (event, id) => {\r\n    if (event.target.value !== \"0\") {\r\n      let findIndex = products?.findIndex((e) => e._id === id);\r\n      if (findIndex !== -1) {\r\n        products[findIndex].quntity = Number(event.target.value);\r\n      }\r\n      setProducts([...products]);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    window.scroll({\r\n      top: 0,\r\n      left: 0,\r\n      behavior: \"smooth\",\r\n    });\r\n\r\n    ApiGetNoAuth(\"product/get\")\r\n    .then((res) => {\r\n     \r\n      if(res?.payload){\r\n        setProducts(res?.payload)\r\n      }\r\n    })\r\n  }, []);\r\n  const onClickProductDetails = (id) => {\r\n    // let data = products.find((e) => e.id === id);\r\n    // localStorage.setItem(\"singleProductDetails\", JSON.stringify(data));\r\n    // navigate(`/product-details/${id}`);\r\n    navigate(`/product-details/${id}`);\r\n\r\n  };\r\n\r\n  const onAddCart = (id) => {\r\n    let data = products.find((e) => e._id === id);\r\n\r\n    const payload = {\r\n      productId : id,\r\n      quantity :  data.quntity ? data.quntity : 1\r\n    }\r\n\r\n    ApiPost(\"cart/add-product-to-cart\", payload)\r\n      .then((res) => {\r\n        toast.success(\"Successfully added in cart.\");\r\n\r\n      }).catch((err) => {\r\n          if(err?.code == 400){\r\n            toast.error(err?.error)\r\n          }\r\n      })\r\n    navigate(`/cart`);\r\n  };\r\n  return (\r\n    <React.Fragment>\r\n      <header className=\"header2\">\r\n        <div className=\"container\">\r\n          <div className=\"row banner\">\r\n            <div className=\"col-2\">\r\n              <h1>Start bring vegetables</h1>\r\n\r\n              <Link to=\"/product\" className=\"btn\">\r\n                Online Order Now\r\n              </Link>\r\n            </div>\r\n            <div className=\"col-2\"></div>\r\n          </div>\r\n        </div>\r\n      </header>\r\n      <main>\r\n        <section className=\"small-container\">\r\n          <h2 className=\"title\">Product</h2>\r\n          <div className=\"row grid-item\">\r\n            {products?.slice(0, 3)?.map((data, index) => {\r\n              return (\r\n                <div class=\"card\">\r\n                  <img\r\n                    className=\"img-alignment\"\r\n                    onClick={() => onClickProductDetails(data._id)}\r\n                    src={`${API.imagePoint}/${data.images[0]}`}\r\n                    alt={`product-${index}`}\r\n                  />\r\n                  <h1>{data.productName}</h1>\r\n                  <p class=\"price\">${data.pricing}.00</p>\r\n                  <p>{data?.description}</p>\r\n                  <div className=\"input-quntity\">\r\n                    <label for={`quntity-${data._id}`}>Quntity </label>\r\n                    <input\r\n                      type=\"number\"\r\n                      min=\"1\"\r\n                      id={`quntity-${data.id}`}\r\n                      name=\"quntity\"\r\n                      value={data.quntity}\r\n                      onChange={(event) =>\r\n                        onChangeQuntityProduct(event, data._id)\r\n                      }\r\n                    />\r\n                  </div>\r\n                  <p>\r\n                    <button onClick={() => onAddCart(data._id)}>\r\n                      Add to Cart\r\n                    </button>\r\n                  </p>\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        </section>\r\n      </main>\r\n    </React.Fragment>\r\n  );\r\n}\r\n",[],"/Users/user/Downloads/frontend/src/Components/ProductDetails.js",["132","133","134","135"],[],"/Users/user/Downloads/frontend/src/Components/Invoice.js",["136","137","138","139","140","141","142"],[],"import React, { useEffect, useState } from \"react\";\r\nimport Avatar from \"react-avatar\";\r\nimport { toast } from \"react-hot-toast\";\r\nimport { useNavigate, useParams,useLocation } from \"react-router-dom\";\r\nimport list from \"../data/product\";\r\nimport StarRating from \"./StarRating\";\r\nimport { API } from \"../config/API/api.config\";\r\n\r\nexport default function Invoice() {\r\n  const location = useLocation();\r\n  const { data:orderData } = location.state;\r\n\r\n  const [orderInfo, setOrderInfo] = useState(orderData);\r\n\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    if (orderInfo && !Object.keys(orderInfo)?.length) {\r\n      navigate(\"/\");\r\n    }\r\n    window.scroll({\r\n      top: 0,\r\n      left: 0,\r\n      behavior: \"smooth\",\r\n    });\r\n  }, []);\r\n\r\n  \r\n \r\n  return (\r\n    <React.Fragment>\r\n      <main>\r\n        <div className=\"invoice-box\">\r\n          <table>\r\n            <tr class=\"top\">\r\n              <td colspan=\"4\">\r\n                <table>\r\n                  <tr>\r\n                    <td>\r\n                      {\" \"}\r\n                      Invoice #: {orderInfo?.invoiceNo}\r\n                      <br />\r\n                      Created : {new Date(orderInfo.createdAt).getDate()}/\r\n                      {new Date(orderInfo.createdAt).getMonth()}/\r\n                      {new Date(orderInfo.createdAt).getFullYear()}\r\n                      <br />\r\n                      Due : {new Date(orderInfo.duedate).getDate()}/\r\n                      {new Date(orderInfo.duedate).getMonth()}/\r\n                      {new Date(orderInfo.duedate).getFullYear()}\r\n                    </td>\r\n                    <td></td>\r\n                    <td>\r\n                      {\" \"}\r\n                      {orderInfo?.name}.<br />\r\n                      {orderInfo?.email}\r\n                      {/* {orderInfo.email} */}\r\n                      <br />\r\n                      {orderInfo?.phone}\r\n                    </td>\r\n                    <td>\r\n                      <b>Address : </b>\r\n                      <br />\r\n                      {orderInfo?.addressDetail?.address}, {orderInfo.addressDetail.city}.<br />\r\n                      {orderInfo?.addressDetail?.province}, {orderInfo?.addressDetail?.postcode}\r\n                   </td>\r\n                  </tr>\r\n                </table>\r\n              </td>\r\n            </tr>\r\n\r\n            <tr class=\"heading\">\r\n              <td>Item</td>\r\n              <td>Quntity</td>\r\n              <td>Unit Price</td>\r\n              <td>Total Price</td>\r\n            </tr>\r\n            {orderInfo.order?.map((item) => {\r\n              return (\r\n                <tr class=\"item\">\r\n                  <td class=\"item-invoice\">\r\n                    <img src={`${API.imagePoint}/${item?.productId?.images[0]}`} alt=\"\" />\r\n                  \r\n                    <p>{item.productId.productName}</p>\r\n                  </td>\r\n                  <td>{item.quantity}</td>\r\n                  <td>${item.price}</td>\r\n                  <td>${item.price * Number(item.quantity)}.00</td>\r\n                </tr>\r\n              );\r\n            })}\r\n            <tr class=\"total\">\r\n              <td></td>\r\n              <td></td>\r\n              <td></td>\r\n              <td>\r\n                <b>Total: </b>&nbsp;&nbsp;&nbsp;${orderInfo.totalPrice}.00\r\n              </td>\r\n            </tr>\r\n\r\n            <tr class=\"total\">\r\n              <td></td>\r\n              <td></td>\r\n              <td></td>\r\n              <td>\r\n                <b>Tax: </b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$\r\n                {orderInfo.totalShippingCost}.00\r\n              </td>\r\n            </tr>\r\n          </table>\r\n         \r\n        </div>\r\n      </main>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","/Users/user/Downloads/frontend/src/Components/Profile.js",["143","144"],[],"import React, { useEffect, useState } from \"react\";\r\nimport { toast } from \"react-hot-toast\";\r\nimport { ApiGet, ApiPut } from \"../helper/services/api\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nexport default function Profile() {\r\n  const [user, setUser] = useState({});\r\n  const [errors, setErrors] = useState({});\r\n  const [passwordType, setPasswordType] = useState(\"password\");\r\n  const [passwordType1, setPasswordType1] = useState(\"password\");\r\n  const navigate = useNavigate();\r\n\r\n  const togglePassword = () => {\r\n    if (passwordType === \"password\") {\r\n      setPasswordType(\"text\");\r\n      return;\r\n    }\r\n    setPasswordType(\"password\");\r\n  };\r\n\r\n  const togglePassword1 = () => {\r\n    if (passwordType1 === \"password\") {\r\n      setPasswordType1(\"text\");\r\n      return;\r\n    }\r\n    setPasswordType1(\"password\");\r\n  };\r\n\r\n  const handleChnage = (e) => {\r\n    const { name, value } = e?.target;\r\n    setUser({\r\n      ...user,\r\n      [name]: value,\r\n    });\r\n  };\r\n  useEffect(() => {\r\n    window.scroll({\r\n      top: 0,\r\n      left: 0,\r\n      behavior: \"smooth\",\r\n    });\r\n\r\n    ApiGet(\"user/get/profile\")\r\n  .then((res) => {\r\n\r\n    setUser({\r\n      ...res?.payload,\r\n    })\r\n    \r\n  })\r\n  }, []);\r\n  const validateFrom = () => {\r\n    let error = {};\r\n    const min = 3,\r\n      max = 25;\r\n    const isBetween = (length, min, max) =>\r\n      length < min || length > max ? false : true;\r\n    const isPasswordSecure = (password) => {\r\n      const re = new RegExp(\r\n        \"^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#$%^&*])(?=.{8,})\"\r\n      );\r\n      return re.test(password);\r\n    };\r\n    const isEmailValid = (email) => {\r\n      const re =\r\n        /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n      return re.test(email);\r\n    };\r\n   if (user?.password && !isPasswordSecure(user?.password)) {\r\n      error[\"password\"] =\r\n        \"Password must has at least 8 characters that include at least 1 lowercase character, 1 uppercase characters, 1 number, and 1 special character in (!@#$%^&*)\";\r\n    }\r\n    if (!user?.email) {\r\n      error[\"email\"] = \"Email cannot be blank.\";\r\n    } else if (!isEmailValid(user?.email)) {\r\n      error[\"email\"] = \"Email is not valid.\";\r\n    }\r\n    if (!user?.username) {\r\n      error[\"username\"] = \"Username cannot be blank.\";\r\n    } else if (!isBetween(user?.username?.length, min, max)) {\r\n      error[\r\n        \"username\"\r\n      ] = `Username must be between ${min} and ${max} characters.`;\r\n    }\r\n    if (user?.password) {\r\n      if (!user?.confirmPassword) {\r\n        error[\"confirmPassword\"] = \"Please enter the password again.\";\r\n      } else if (user?.password !== user?.confirmPassword) {\r\n        error[\"confirmPassword\"] = \"confirmPassword is not valid.\";\r\n      }\r\n    }\r\n    if (Object.keys(error)?.length) {\r\n      setErrors(error);\r\n      return false;\r\n    } else {\r\n      setErrors({});\r\n      return true;\r\n    }\r\n  };\r\n\r\n  const onUpdateProfile = (e) => {\r\n    e?.preventDefault();\r\n    if (validateFrom()) {\r\n\r\n\r\n      ApiPut(\"user/update/profile\", user)\r\n      .then((res) => {\r\n         setUser({})\r\n         toast.success(\"Successfully update your profile.\");\r\n          navigate(\"/\");\r\n      })\r\n      // if (user?.confirmPassword) {\r\n      //   delete user?.confirmPassword;\r\n      // }\r\n      // let registerUser = localStorage.getItem(\"registerUser\");\r\n      // registerUser = JSON.parse(registerUser);\r\n      // let index = registerUser.findIndex(\r\n      //   (obj) => Number(obj.id) === Number(user.id)\r\n      // );\r\n      // registerUser[index] = user;\r\n      // localStorage.setItem(\"registerUser\", JSON.stringify(registerUser));\r\n      // localStorage.setItem(\"userData\", JSON.stringify(user));\r\n      \r\n    }\r\n  };\r\n  return (\r\n    <React.Fragment>\r\n      <main className=\"contact-us\">\r\n        <section className=\"footer_get_touch_outer\">\r\n          <div className=\"container\">\r\n            <div className=\"footer_get_touch_inner\">\r\n              <div className=\"colmun-70 get_form\">\r\n                <div className=\"get_form_inner\">\r\n                  <div className=\"get_form_inner_text\">\r\n                    <h3>My Profile</h3>\r\n                  </div>\r\n                  <form>\r\n                    <div className=\"grid-50-50\">\r\n                      <div\r\n                        className={\r\n                          errors[\"username\"] ? \"error form-field\" : \"form-field\"\r\n                        }\r\n                      >\r\n                        <input\r\n                          type=\"text\"\r\n                          value={user?.username}\r\n                          name=\"username\"\r\n                          onChange={handleChnage}\r\n                          placeholder=\"UserName\"\r\n                        />\r\n                        <small className=\"small\">{errors[\"username\"]}</small>\r\n                      </div>\r\n                      <div\r\n                        className={\r\n                          errors[\"email\"] ? \"error form-field\" : \"form-field\"\r\n                        }\r\n                      >\r\n                        <input\r\n                          type=\"email\"\r\n                          name=\"email\"\r\n                          onChange={handleChnage}\r\n                          value={user?.email}\r\n                          placeholder=\"Email\"\r\n                        />\r\n                        <small className=\"small\">{errors[\"email\"]}</small>\r\n                      </div>\r\n                      <div\r\n                        className={\r\n                          errors[\"password\"]\r\n                            ? \"error form-field input-relative\"\r\n                            : \"input-relative form-field\"\r\n                        }\r\n                      >\r\n                        <input\r\n                          type={passwordType}\r\n                          name=\"password\"\r\n                          onChange={handleChnage}\r\n                          value={user?.password}\r\n                          placeholder=\"Password\"\r\n                        />\r\n                        <div\r\n                          className=\"position-icons\"\r\n                          onClick={togglePassword}\r\n                        >\r\n                          {passwordType !== \"text\" ? (\r\n                            <i className=\"fa fa-eye-slash\" />\r\n                          ) : (\r\n                            <i className=\"fa fa-eye\" />\r\n                          )}\r\n                        </div>\r\n                        <small className=\"small\">{errors[\"password\"]}</small>\r\n                      </div>\r\n                      <div\r\n                        className={\r\n                          errors[\"confirmPassword\"]\r\n                            ? \"error form-field input-relative\"\r\n                            : \"form-field input-relative\"\r\n                        }\r\n                      >\r\n                        <input\r\n                          type={passwordType1}\r\n                          name=\"confirmPassword\"\r\n                          onChange={handleChnage}\r\n                          value={user?.confirmPassword}\r\n                          placeholder=\"Confirm password\"\r\n                        />\r\n                        <div\r\n                          className=\"position-icons\"\r\n                          onClick={togglePassword1}\r\n                        >\r\n                          {passwordType1 !== \"text\" ? (\r\n                            <i className=\"fa fa-eye-slash\" />\r\n                          ) : (\r\n                            <i className=\"fa fa-eye\" />\r\n                          )}\r\n                        </div>\r\n                        <small className=\"small\">\r\n                          {errors[\"confirmPassword\"]}{\" \"}\r\n                        </small>\r\n                      </div>\r\n                      <div\r\n                        className={\r\n                          errors[\"address\"] ? \"error form-field\" : \"form-field\"\r\n                        }\r\n                      >\r\n                        <input\r\n                          type=\"text\"\r\n                          value={user?.address}\r\n                          name=\"address\"\r\n                          onChange={handleChnage}\r\n                          placeholder=\"address\"\r\n                        />\r\n                        <small className=\"small\">{errors[\"address\"]}</small>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"grid-full\">\r\n                      <button\r\n                        className=\"btn\"\r\n                        onClick={(e) => onUpdateProfile(e)}\r\n                      >\r\n                        Update\r\n                      </button>\r\n                    </div>\r\n                  </form>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </section>\r\n      </main>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","/Users/user/Downloads/frontend/src/Components/Layout/Footer.js",["145","146","147"],[],"/Users/user/Downloads/frontend/src/Components/Layout/Header.js",["148","149","150","151"],[],"import React, { useEffect, useRef } from \"react\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport { useNavigate } from \"react-router-dom\";\nimport useOnClickOutside from \"../useOnClickOutside\";\n\nexport default function Header() {\n  const navigate = useNavigate();\n  const menuRef = useRef();\n  let cartDataCount5 = localStorage.getItem(\"cartData\");\n  cartDataCount5 = cartDataCount5 ? JSON.parse(cartDataCount5) : [];\n  const location = useLocation();\n  const onRedirectToCart = () => {\n    navigate(\"/cart\");\n  };\n\n  const logout = () => {\n    localStorage.removeItem(\"userData\");\n    localStorage.removeItem(\"cartData\");\n    localStorage.removeItem(\"singleProductDetails\");\n    localStorage.removeItem(\"orderInfo\");\n    localStorage.removeItem(\"token\");\n  };\n\n  const menutoggle = () => {\n    var MenuItems = document.getElementById(\"MenuItems\");\n    if (MenuItems.style.maxHeight == \"0px\") {\n      MenuItems.style.maxHeight = \"200px\";\n    } else {\n      MenuItems.style.maxHeight = \"0px\";\n    }\n  };\n  useOnClickOutside(menuRef, () => {\n    var MenuItems = document.getElementById(\"MenuItems\");\n    MenuItems.style.maxHeight = \"0px\";\n  });\n  return (\n    <React.Fragment>\n      <header className=\"header sticky\">\n        <div className=\"container\">\n          <div className=\"navbar\" ref={menuRef}>\n            <div className=\"logo\">\n              <h2>Vegetables</h2>\n            </div>\n            <nav>\n              <ul id=\"MenuItems\">\n                <li\n                  className={location.pathname === \"/\" ? \"li-active\" : \"\"}\n                  onClick={menutoggle}\n                >\n                  <Link to=\"/\">Home</Link>\n                </li>\n                <li\n                  className={\n                    location.pathname === \"/product\" ? \"li-active\" : \"\"\n                  }\n                  onClick={menutoggle}\n                >\n                  <Link to=\"/product\">Products</Link>\n                </li>\n                <li\n                  className={\n                    location.pathname === \"/orderlist\" ? \"li-active\" : \"\"\n                  }\n                  onClick={menutoggle}\n                >\n                  <Link to=\"/orderlist\">Order</Link>\n                </li>\n                <li\n                  className={\n                    location.pathname === \"/profile\" ? \"li-active\" : \"\"\n                  }\n                  onClick={menutoggle}\n                >\n                  <Link to=\"/profile\">Profile</Link>\n                </li>\n                <li onClick={() => logout()}>\n                  <Link to=\"/auth\">Logout</Link>\n                </li>\n              </ul>\n            </nav>\n            <div onClick={() => onRedirectToCart()}>\n              <img\n                src={require(\"../../Assets/image/cart.png\")}\n                width=\"30px\"\n                height=\"30px\"\n              />\n              <p className=\"count\">{cartDataCount5?.length}</p>\n            </div>\n            <img\n              src={require(\"../../Assets/image/menu.png\")}\n              className=\"menu-icon\"\n              onClick={() => menutoggle()}\n            />\n          </div>\n        </div>\n      </header>\n    </React.Fragment>\n  );\n}\n","/Users/user/Downloads/frontend/src/Components/ErrorPage/index.js",[],[],"/Users/user/Downloads/frontend/src/Components/StarRating.js",[],[],"/Users/user/Downloads/frontend/src/config/API/api.config.js",[],[],"/Users/user/Downloads/frontend/src/helper/services/api.js",["152","153","154","155","156","157"],[],"/Users/user/Downloads/frontend/src/Components/useOnClickOutside/index.js",[],[],"/Users/user/Downloads/frontend/src/helper/services/storage.js",[],[],{"ruleId":"158","severity":1,"message":"159","line":6,"column":8,"nodeType":"160","messageId":"161","endLine":6,"endColumn":12},{"ruleId":"158","severity":1,"message":"159","line":4,"column":8,"nodeType":"160","messageId":"161","endLine":4,"endColumn":12},{"ruleId":"162","severity":1,"message":"163","line":53,"column":24,"nodeType":"164","messageId":"165","endLine":53,"endColumn":26},{"ruleId":"162","severity":1,"message":"163","line":27,"column":58,"nodeType":"164","messageId":"165","endLine":27,"endColumn":60},{"ruleId":"162","severity":1,"message":"163","line":68,"column":49,"nodeType":"164","messageId":"165","endLine":68,"endColumn":51},{"ruleId":"158","severity":1,"message":"166","line":40,"column":3,"nodeType":"160","messageId":"161","endLine":40,"endColumn":19},{"ruleId":"167","severity":1,"message":"168","line":76,"column":19,"nodeType":"169","messageId":"170","endLine":76,"endColumn":20,"suggestions":"171"},{"ruleId":"167","severity":1,"message":"168","line":76,"column":44,"nodeType":"169","messageId":"170","endLine":76,"endColumn":45,"suggestions":"172"},{"ruleId":"158","severity":1,"message":"173","line":108,"column":11,"nodeType":"160","messageId":"161","endLine":108,"endColumn":23},{"ruleId":"167","severity":1,"message":"168","line":110,"column":19,"nodeType":"169","messageId":"170","endLine":110,"endColumn":20,"suggestions":"174"},{"ruleId":"167","severity":1,"message":"168","line":110,"column":44,"nodeType":"169","messageId":"170","endLine":110,"endColumn":45,"suggestions":"175"},{"ruleId":"162","severity":1,"message":"163","line":207,"column":24,"nodeType":"164","messageId":"165","endLine":207,"endColumn":26},{"ruleId":"176","severity":1,"message":"177","line":253,"column":25,"nodeType":"178","endLine":258,"endColumn":27},{"ruleId":"176","severity":1,"message":"177","line":568,"column":21,"nodeType":"178","endLine":568,"endColumn":80},{"ruleId":"176","severity":1,"message":"177","line":569,"column":21,"nodeType":"178","endLine":572,"endColumn":23},{"ruleId":"158","severity":1,"message":"159","line":3,"column":8,"nodeType":"160","messageId":"161","endLine":3,"endColumn":12},{"ruleId":"162","severity":1,"message":"163","line":60,"column":24,"nodeType":"164","messageId":"165","endLine":60,"endColumn":26},{"ruleId":"158","severity":1,"message":"159","line":4,"column":8,"nodeType":"160","messageId":"161","endLine":4,"endColumn":12},{"ruleId":"162","severity":1,"message":"163","line":68,"column":24,"nodeType":"164","messageId":"165","endLine":68,"endColumn":26},{"ruleId":"162","severity":1,"message":"163","line":93,"column":24,"nodeType":"164","messageId":"165","endLine":93,"endColumn":26},{"ruleId":"179","severity":1,"message":"180","line":147,"column":18,"nodeType":"169","messageId":"181","endLine":147,"endColumn":39},{"ruleId":"158","severity":1,"message":"182","line":2,"column":8,"nodeType":"160","messageId":"161","endLine":2,"endColumn":14},{"ruleId":"158","severity":1,"message":"183","line":3,"column":10,"nodeType":"160","messageId":"161","endLine":3,"endColumn":15},{"ruleId":"158","severity":1,"message":"184","line":4,"column":23,"nodeType":"160","messageId":"161","endLine":4,"endColumn":32},{"ruleId":"158","severity":1,"message":"159","line":5,"column":8,"nodeType":"160","messageId":"161","endLine":5,"endColumn":12},{"ruleId":"158","severity":1,"message":"185","line":6,"column":8,"nodeType":"160","messageId":"161","endLine":6,"endColumn":18},{"ruleId":"158","severity":1,"message":"186","line":13,"column":21,"nodeType":"160","messageId":"161","endLine":13,"endColumn":33},{"ruleId":"187","severity":1,"message":"188","line":26,"column":6,"nodeType":"189","endLine":26,"endColumn":8,"suggestions":"190"},{"ruleId":"167","severity":1,"message":"168","line":66,"column":19,"nodeType":"169","messageId":"170","endLine":66,"endColumn":20,"suggestions":"191"},{"ruleId":"167","severity":1,"message":"168","line":66,"column":44,"nodeType":"169","messageId":"170","endLine":66,"endColumn":45,"suggestions":"192"},{"ruleId":"158","severity":1,"message":"193","line":7,"column":3,"nodeType":"160","messageId":"161","endLine":7,"endColumn":11},{"ruleId":"194","severity":1,"message":"195","line":25,"column":17,"nodeType":"178","messageId":"196","endLine":25,"endColumn":68,"fix":"197"},{"ruleId":"194","severity":1,"message":"195","line":31,"column":17,"nodeType":"178","messageId":"196","endLine":31,"endColumn":76,"fix":"198"},{"ruleId":"158","severity":1,"message":"199","line":1,"column":17,"nodeType":"160","messageId":"161","endLine":1,"endColumn":26},{"ruleId":"162","severity":1,"message":"163","line":26,"column":35,"nodeType":"164","messageId":"165","endLine":26,"endColumn":37},{"ruleId":"176","severity":1,"message":"177","line":82,"column":15,"nodeType":"178","endLine":86,"endColumn":17},{"ruleId":"176","severity":1,"message":"177","line":89,"column":13,"nodeType":"178","endLine":93,"endColumn":15},{"ruleId":"162","severity":1,"message":"163","line":13,"column":39,"nodeType":"164","messageId":"165","endLine":13,"endColumn":41},{"ruleId":"162","severity":1,"message":"163","line":35,"column":45,"nodeType":"164","messageId":"165","endLine":35,"endColumn":47},{"ruleId":"162","severity":1,"message":"163","line":59,"column":45,"nodeType":"164","messageId":"165","endLine":59,"endColumn":47},{"ruleId":"162","severity":1,"message":"163","line":80,"column":33,"nodeType":"164","messageId":"165","endLine":80,"endColumn":35},{"ruleId":"162","severity":1,"message":"163","line":101,"column":39,"nodeType":"164","messageId":"165","endLine":101,"endColumn":41},{"ruleId":"162","severity":1,"message":"163","line":121,"column":45,"nodeType":"164","messageId":"165","endLine":121,"endColumn":47},"no-unused-vars","'list' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'registerUserData' is assigned a value but never used.","no-useless-escape","Unnecessary escape character: \\[.","Literal","unnecessaryEscape",["200","201"],["202","203"],"'isEmailValid' is assigned a value but never used.",["204","205"],["206","207"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-template-curly-in-string","Unexpected template string expression.","unexpectedTemplateExpression","'Avatar' is defined but never used.","'toast' is defined but never used.","'useParams' is defined but never used.","'StarRating' is defined but never used.","'setOrderInfo' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'navigate' and 'orderInfo'. Either include them or remove the dependency array.","ArrayExpression",["208"],["209","210"],["211","212"],"'cartData' is assigned a value but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" (which implies rel=\"noopener\") is a security risk in older browsers: see https://mathiasbynens.github.io/rel-noopener/#recommendations","noTargetBlankWithoutNoreferrer",{"range":"213","text":"214"},{"range":"215","text":"214"},"'useEffect' is defined but never used.",{"messageId":"216","fix":"217","desc":"218"},{"messageId":"219","fix":"220","desc":"221"},{"messageId":"216","fix":"222","desc":"218"},{"messageId":"219","fix":"223","desc":"221"},{"messageId":"216","fix":"224","desc":"218"},{"messageId":"219","fix":"225","desc":"221"},{"messageId":"216","fix":"226","desc":"218"},{"messageId":"219","fix":"227","desc":"221"},{"desc":"228","fix":"229"},{"messageId":"216","fix":"230","desc":"218"},{"messageId":"219","fix":"231","desc":"221"},{"messageId":"216","fix":"232","desc":"218"},{"messageId":"219","fix":"233","desc":"221"},[927,927]," rel=\"noreferrer\"",[1172,1172],"removeEscape",{"range":"234","text":"235"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"236","text":"237"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"238","text":"235"},{"range":"239","text":"237"},{"range":"240","text":"235"},{"range":"241","text":"237"},{"range":"242","text":"235"},{"range":"243","text":"237"},"Update the dependencies array to be: [navigate, orderInfo]",{"range":"244","text":"245"},{"range":"246","text":"235"},{"range":"247","text":"237"},{"range":"248","text":"235"},{"range":"249","text":"237"},[1923,1924],"",[1923,1923],"\\",[1948,1949],[1948,1948],[3060,3061],[3060,3060],[3085,3086],[3085,3085],[748,750],"[navigate, orderInfo]",[1676,1677],[1676,1676],[1701,1702],[1701,1701]]